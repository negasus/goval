// Code generated by github.com/negasus/goval. DO NOT EDIT.
// Used flags: -t Composite2 -t Composite -o goval_composite_names.go

package tests

import (
	"fmt"
	"github.com/negasus/goval"
)

func (model *Composite2) Validate() goval.Errors {
	errors := goval.Errors{}

	{ // ID
		if model.ID < 1 {
			errors["id"] = append(errors["id"], goval.Error{
				Type: goval.ErrorTypeMinNumeric,
				Values: map[string]any{
					"field":      "id",
					"rule_value": 1,
				},
			})
		}
	}

	return errors
}

func (model *Composite) Validate() goval.Errors {
	errors := goval.Errors{}

	{ // Item
		for k, v := range model.Item.Validate() {
			errors[k] = append(errors[k], v...)
		}
	}
	{ // Items
		if len(model.Items) < 1 {
			errors["items"] = append(errors["items"], goval.Error{
				Type: goval.ErrorTypeMinArray,
				Values: map[string]any{
					"field":      "items",
					"rule_value": 1,
				},
			})
		}
	}
	{ // Items
		for idx, item := range model.Items {
			for k, v := range item.Validate() {
				errors[fmt.Sprintf("items.%d.%s", idx, k)] = append(errors[k], v...)
			}
		}
	}

	return errors
}
