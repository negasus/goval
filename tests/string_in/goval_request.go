// Code generated by github.com/negasus/goval. DO NOT EDIT.
// Used flags: -d -t Request

package string_in

import (
	"github.com/negasus/goval"
	"slices"
)

func (model *Request) Validate() *goval.Errors {
	var errors []goval.Error

	{ // TagValues
		if !slices.Contains([]string{"foo", "bar", "b a z"}, model.TagValues) {
			errors = append(errors, goval.Error{
				Type:  "invalid",
				Field: "tagValues",
				Values: map[string]any{
					"field": "tagValues",
				},
				Path: []string{"tagValues"},
			})
		}
	}
	{ // TagVar
		if !slices.Contains(enum, model.TagVar) {
			errors = append(errors, goval.Error{
				Type:  "invalid",
				Field: "tagVar",
				Values: map[string]any{
					"field": "tagVar",
				},
				Path: []string{"tagVar"},
			})
		}
	}

	if len(errors) == 0 {
		return nil
	}

	return &goval.Errors{Errors: errors}
}
